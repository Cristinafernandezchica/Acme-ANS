<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="15.1">
  <zoom_level>1</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>118</x>
      <y>488</y>
      <w>85</w>
      <h>19</h>
    </coordinates>
    <panel_attributes>&lt;&lt;AbstractEntity&gt;&gt;
@ValidBooking
booking::Booking 
--
+ locatorCode: String {Mandatory, ValidString(pattern = "^[A-Z0-9]{6,8}$"), Column(unique=true)}
+ purchaseMoment: Date {Mandatory, ValidMoment(min = "2000/01/01 00:00", past = true), Temporal(TemporalType.TIMESTAMP)}
+ travelClass: TravelClass {Mandatory, Automapped}
+ price: Money {Mandatory, ValidMoney(min = 0, max = 10000000.00), Automapped}
- lastCardNibble: String {Optional, ValidString(pattern = "^\\d{4}$"), Automapped}
+ draftMode: boolean {Mandatory, Automapped}
--
+ getPrice(): Money</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>142</x>
      <y>467</y>
      <w>16</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>&lt;&lt;AbstractEntity&gt;&gt;
flights::Flight
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>138</x>
      <y>517</y>
      <w>41</w>
      <h>10</h>
    </coordinates>
    <panel_attributes>&lt;&lt;AbstractEntity&gt;&gt;
@ValidBookingRecord
bookingRecord::BookingRecord
--
+ booking: Booking {Mandatory, Valid, ManyToOne}
+ passenger: Passenger {Mandatory, Valid, ManyToOne}</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>123</x>
      <y>542</y>
      <w>80</w>
      <h>17</h>
    </coordinates>
    <panel_attributes>&lt;&lt;AbstractEntity&gt;&gt;
@ValidPassenger
passenger::Passenger
--
+ fullName: String {Mandatory, ValidString(min=1, max = 255), Automapped}
+ email: String {Mandatory, ValidEmail, Automapped}
+ passportNumber: String {Mandatory, ValidString(pattern = "^[A-Z0-9]{6,9}$"), Automapped}
+ dateOfBirth: Date {Mandatory, ValidMoment(min = "2000/01/01 00:00", past = true), Temporal(TemporalType.TIMESTAMP)}
- specialNeeds: String {Optional, ValidString(max = 50), Automapped}
+ draftMode: boolean {Mandatory, Automapped}</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>179</x>
      <y>472</y>
      <w>17</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Enumeration&gt;&gt;
booking::TravelClass
--
ECONOMY
BUSINESS</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>144</x>
      <y>474</y>
      <w>9</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>lt=-
m1=0..1
m2=0..n
flying at &gt;</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;140.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>221</x>
      <y>488</y>
      <w>63</w>
      <h>17</h>
    </coordinates>
    <panel_attributes>&lt;&lt;AbstractRole&gt;&gt;
@ValidCustomer
realms::Customer
--
+ identifier: String {Mandatory, ValidString(pattern = "^[A-Z]{2,3}\\d{6}$"), Column(unique = true)}
+ phoneNumber: String {Mandatory, ValidPhoneNumber, Automapped}
+ address: String {Mandatory, ValidString(min = 1, max = 255), Automapped}
+ city: String {Mandatory, ValidString(min = 1, max = 50), Automapped}
+ country: String {Mandatory, ValidString(min = 1, max = 50), Automapped}
- earnedPoints: Integer {Optional, ValidNumber(min = 0, max = 500000), Automapped}</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>144</x>
      <y>526</y>
      <w>11</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>lt=-
m1=0..n
m2=0..1
booked by &gt;</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;160.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>144</x>
      <y>506</y>
      <w>12</w>
      <h>13</h>
    </coordinates>
    <panel_attributes>lt=-
m1=0..1
m2=0..n
registered to &gt;</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;110.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>202</x>
      <y>495</y>
      <w>21</w>
      <h>5</h>
    </coordinates>
    <panel_attributes>lt=-
m1=0..n
m2=0..1
bought by &gt;</panel_attributes>
    <additional_attributes>10.0;20.0;190.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>202</x>
      <y>504</y>
      <w>34</w>
      <h>49</h>
    </coordinates>
    <panel_attributes>lt=-
m1=0..n
m2=0..1
&lt; register</panel_attributes>
    <additional_attributes>10.0;460.0;260.0;460.0;260.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>243</x>
      <y>521</y>
      <w>39</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>&lt;&lt;AbstractForm&gt;&gt;
form::CustomerDashboard
--
+ lastFiveDestinations: List&lt;String&gt;
+ moneySpentLastYearDisplay: String
+ bookingCountByTravelClass: String
+ bookingCountLastFiveYears: Integer
+ bookingAverageCostLastFiveYearsDisplay: String
+ bookingMinCostLastFiveYearsDisplay: String
+ bookingMaxCostLastFiveYearsDisplay: String
+ bookingStdDevCostLastFiveYearsDisplay: String
+ passengerCount: Integer
+ passengerAverage: Double
+ passengerMin: Integer
+ passengerMax: Integer
+ passengerStdDev: Double

--
+ moneySpentLastYear(): List&lt;Money&gt;
+ bookingCostsLastFiveYears(): List&lt;Money&gt;
</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
