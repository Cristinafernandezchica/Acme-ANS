<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="15.1">
  <zoom_level>5</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>105</y>
      <w>425</w>
      <h>95</h>
    </coordinates>
    <panel_attributes>&lt;&lt;AbstractEntity&gt;&gt;
@ValidBooking
booking::Booking 
--
+ locatorCode: String {Mandatory, ValidString(pattern = "^[A-Z0-9]{6,8}$"), Column(unique=true)}
+ purchaseMoment: Date {Mandatory, ValidMoment(min = "2000/01/01 00:00", past = true), Temporal(TemporalType.TIMESTAMP)}
+ travelClass: TravelClass {Mandatory, Automapped}
+ price: Money {Mandatory, ValidMoney(min = 0, max = 10000000.00), Automapped}
- lastCardNibble: String {Optional, ValidString(pattern = "^\\d{4}$"), Automapped}
+ draftMode: boolean {Mandatory, Automapped}
--
+ getPrice(): Money</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>120</x>
      <y>0</y>
      <w>80</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>&lt;&lt;AbstractEntity&gt;&gt;
flights::Flight
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>100</x>
      <y>250</y>
      <w>205</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>&lt;&lt;AbstractEntity&gt;&gt;
@ValidBookingRecord
bookingRecord::BookingRecord
--
+ booking: Booking {Mandatory, Valid, ManyToOne}
+ passenger: Passenger {Mandatory, Valid, ManyToOne}</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>25</x>
      <y>375</y>
      <w>400</w>
      <h>85</h>
    </coordinates>
    <panel_attributes>&lt;&lt;AbstractEntity&gt;&gt;
passenger::Passenger
--
+ fullName: String {Mandatory, ValidString(min=1, max = 255), Automapped}
+ email: String {Mandatory, ValidEmail, Automapped}
+ passportNumber: String {Mandatory, ValidString(pattern = "^[A-Z0-9]{6,9}$"), Automapped}
+ dateOfBirth: Date {Mandatory, ValidMoment(min = "2000/01/01 00:00", past = true), Temporal(TemporalType.TIMESTAMP)}
- specialNeeds: String {Optional, ValidString(max = 50), Automapped}
+ draftMode: boolean {Mandatory, Automapped}</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>305</x>
      <y>25</y>
      <w>85</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Enumeration&gt;&gt;
booking::TravelClass
--
ECONOMY
BUSINESS</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>130</x>
      <y>35</y>
      <w>45</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=-
m1=0..1
m2=0..n
flying at &gt;</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;140.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>515</x>
      <y>105</y>
      <w>315</w>
      <h>85</h>
    </coordinates>
    <panel_attributes>&lt;&lt;AbstractRole&gt;&gt;
@ValidCustomer
realms::Customer
--
+ identifier: String {Mandatory, ValidString(pattern = "^[A-Z]{2,3}\\d{6}$"), Column(unique = true)}
+ phoneNumber: String {Mandatory, ValidPhoneNumber, Automapped}
+ address: String {Mandatory, ValidString(min = 1, max = 255), Automapped}
+ city: String {Mandatory, ValidString(min = 1, max = 50), Automapped}
+ country: String {Mandatory, ValidString(min = 1, max = 50), Automapped}
- earnedPoints: Integer {Optional, ValidNumber(min = 0, max = 500000), Automapped}</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>130</x>
      <y>295</y>
      <w>55</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=-
m1=0..n
m2=0..1
booked by &gt;</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;160.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>130</x>
      <y>195</y>
      <w>60</w>
      <h>65</h>
    </coordinates>
    <panel_attributes>lt=-
m1=0..1
m2=0..n
registered to &gt;</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;110.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>420</x>
      <y>140</y>
      <w>105</w>
      <h>25</h>
    </coordinates>
    <panel_attributes>lt=-
m1=0..n
m2=0..1
bought by &gt;</panel_attributes>
    <additional_attributes>10.0;20.0;190.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>420</x>
      <y>185</y>
      <w>170</w>
      <h>245</h>
    </coordinates>
    <panel_attributes>lt=-
m1=0..n
m2=0..1
&lt; register</panel_attributes>
    <additional_attributes>10.0;460.0;260.0;460.0;260.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>625</x>
      <y>270</y>
      <w>195</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>&lt;&lt;AbstractForm&gt;&gt;
form::CustomerDashboard
--
+ lastFiveDestinations: List&lt;String&gt;
+ moneySpentLastYearDisplay: String
+ bookingCountByTravelClass: String
+ bookingCountLastFiveYears: Integer
+ bookingAverageCostLastFiveYearsDisplay: String
+ bookingMinCostLastFiveYearsDisplay: String
+ bookingMaxCostLastFiveYearsDisplay: String
+ bookingStdDevCostLastFiveYearsDisplay: String
+ passengerCount: Integer
+ passengerAverage: Double
+ passengerMin: Integer
+ passengerMax: Integer
+ passengerStdDev: Double

--
+ moneySpentLastYear(): List&lt;Money&gt;
+ bookingCostsLastFiveYears(): List&lt;Money&gt;
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>190</x>
      <y>550</y>
      <w>270</w>
      <h>115</h>
    </coordinates>
    <panel_attributes>&lt;&lt;AbstractEntity&gt;&gt;
realms::Recommendation
--
+ title: String {Mandatory, ValidString(min = 1, max = 100), Automapped}
+ description: String {Mandatory, ValidString(min = 1, max = 500), Automapped}
+ startDate: Date {Mandatory, ValidMoment(past = false), Automapped}
- endDate: Date {Optional, ValidMoment(past = false), Automapped}
+ category: Category {Mandatory, Automapped}
+ estimatedCost: Money {Mandatory, ValidMoney(min = 0), Automapped}
+ link: String {Mandatory, ValidUrl, Automapped}
+ airport: Airport {Mandatory, Valid, ManyToOne(optional = false)}
- externalId: String
- providerName: String</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>650</x>
      <y>580</y>
      <w>80</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>&lt;&lt;AbstractEntity&gt;&gt;
airports::
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>55</x>
      <y>560</y>
      <w>95</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Enumeration&gt;&gt;
recommendation::Category
--
EXPERIENCE
ACTIVITY
RESTAURANT
ACCOMMODATION
OTHER</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>455</x>
      <y>605</y>
      <w>245</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=-
m1=0..n
m2=0..1
booked by &gt;</panel_attributes>
    <additional_attributes>10.0;20.0;470.0;30.0</additional_attributes>
  </element>
</diagram>
